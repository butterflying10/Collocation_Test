  CCollocation.cpp
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(85,32): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(145,32): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(409,12): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
  Collocation_Test.cpp
  public.cpp
  正在编译...
  正在生成代码...
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(170): warning C4715: “CCollocation::InputData”: 不是所有的控件路径都返回值
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(471): warning C4715: “CCollocation::GGDD”: 不是所有的控件路径都返回值
  Collocation_Test.vcxproj -> C:\Butterflying\grade_first\adjust\Collocation_Test\x64\Debug\Collocation_Test.exe
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\arch\SSE\Complex.h(20): warning C26495: 未初始化变量 Eigen::internal::Packet2cf::v。始终初始化成员变量(type.6)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\arch\SSE\Complex.h(251): warning C26495: 未初始化变量 Eigen::internal::Packet1cd::v。始终初始化成员变量(type.6)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\arch\CUDA\Half.h(388): warning C26450: 算术溢出: “<<”操作导致编译时溢出。请使用宽类型存储操作数(io.1)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\GeneralBlockPanelKernel.h(55): warning C26812: 枚举类型“Eigen::Action”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\IterativeLinearSolvers\BasicPreconditioners.h(221): warning C26812: 枚举类型“Eigen::ComputationInfo”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(22): warning C26495: 未初始化变量 CCollocation::detaLx。始终初始化成员变量(type.6)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(62): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(63): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(86): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(122): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(123): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(146): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(224): warning C6386: 写入到“unusedPname”时缓冲区溢出: 可写大小为“unusedPnumber*8”个字节，但可能写入了“16”个字节。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(225): warning C6386: 写入到“unusedXYZ”时缓冲区溢出: 可写大小为“unusedPnumber*3*8”个字节，但可能写入了“32”个字节。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(229): warning C6385: 从“unusedXYZ”中读取的数据无效: 可读大小为“unusedPnumber*3*8”个字节，但可能读取了“48”个字节。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(179): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(295): warning C6386: 写入到“XYZ”时缓冲区溢出: 可写大小为“Pnumber*3*8”个字节，但可能写入了“16”个字节。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(283): warning C6386: 写入到“Pname”时缓冲区溢出: 可写大小为“Pnumber*8”个字节，但可能写入了“16”个字节。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(270): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(274): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(285): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(286): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(286): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(287): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(287): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(344): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(345): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(345): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(346): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(346): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(380): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(380): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(386): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(387): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(387): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(388): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(388): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(479): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(480): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(492): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(586): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(587): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(590): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(727): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(727): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(736): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(736): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(745): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(745): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(761): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(761): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(770): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(770): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(787): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(791): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(797): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(797): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(809): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(814): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(814): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(814): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(816): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(818): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(837): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(837): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(839): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(839): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(839): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(839): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(841): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(841): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(841): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(841): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(858): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(859): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(859): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(860): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(860): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(872): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(873): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(873): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(874): warning C26451: 算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\Butterflying\grade_first\adjust\Collocation_Test\Collocation_Test\CCollocation.cpp(874): warning C26451: 算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\DenseStorage.h(49): warning C26495: 未初始化变量 Eigen::internal::plain_array<double,3,0,0>::array。始终初始化成员变量(type.6)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\PlainObjectBase.h(44): warning C26454: 算术溢出: “-”操作在编译时生成负的无符号结果(io.5)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\LU\PartialPivLU.h(479): warning C26451: 算术溢出: 使用 4 字节值上的运算符 += ，然后将结果转换到 8 字节值。在调用运算符 += 之前将值强制转换为宽类型可避免溢出(io.2)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\GeneralMatrixMatrix.h(164): warning C6255: _alloca 通过引发堆栈溢出异常来指示失败。 应考虑改用 _malloca。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\GeneralMatrixMatrix.h(165): warning C6255: _alloca 通过引发堆栈溢出异常来指示失败。 应考虑改用 _malloca。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\GeneralProduct.h(258): warning C6255: _alloca 通过引发堆栈溢出异常来指示失败。 应考虑改用 _malloca。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\GeneralBlockPanelKernel.h(928): warning C6294: for 循环定义错误: 初始条件不满足测试。 循环体未执行。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\GeneralMatrixVector.h(134): warning C26812: 枚举类型“Eigen::internal::general_matrix_vector_product<__int64,double,Eigen::internal::const_blas_data_mapper<double,__int64,0>,0,0,double,Eigen::internal::const_blas_data_mapper<double,__int64,1>,0,0>::run::__l4::<unnamed-enum-AllAligned>”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\TriangularSolverMatrix.h(74): warning C6255: _alloca 通过引发堆栈溢出异常来指示失败。 应考虑改用 _malloca。
C:\software\eigen-3.3.8\eigen-3.3.8\Eigen\src\Core\products\TriangularSolverMatrix.h(75): warning C6255: _alloca 通过引发堆栈溢出异常来指示失败。 应考虑改用 _malloca。
